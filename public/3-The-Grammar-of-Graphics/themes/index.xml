<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Customising your graph on Staring at R</title>
    <link>/3-the-grammar-of-graphics/themes/</link>
    <description>Recent content in Customising your graph on Staring at R</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-US</language>
    <lastBuildDate>Sat, 10 Nov 2018 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="/3-the-grammar-of-graphics/themes/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Themes</title>
      <link>/3-the-grammar-of-graphics/themes/3_themes/</link>
      <pubDate>Sat, 10 Nov 2018 00:00:00 +0000</pubDate>
      
      <guid>/3-the-grammar-of-graphics/themes/3_themes/</guid>
      <description>The easiest way to quickly modify your graph is to add one of the preset theme() commands. I will add each of them to the graph which will replace the previous theme.
We can simply add items to our current graph object by adding the + sign. Keep in mind that if you dont “resave” it to the object, it wont stick around. If you want to keep a theme, either add it into the original ggplot command, or save it to the same or a new object.</description>
    </item>
    
    <item>
      <title>Axis lines</title>
      <link>/3-the-grammar-of-graphics/themes/5_axislines/</link>
      <pubDate>Sun, 11 Nov 2018 00:00:00 +0000</pubDate>
      
      <guid>/3-the-grammar-of-graphics/themes/5_axislines/</guid>
      <description>To change the axis lines and ticks (lines above each number on an axis) use the following.
Theme argumentDescriptionaxis.line = element_line(insert changes here)This will change both axes lines.axis.line.x = element_line(insert changes here)This will change just the x axis.axis.line.y = element_line(insert changes here)This will change just the y axis.axis.ticks = element_line(insert changes here)Change both axes ticks.</description>
    </item>
    
    <item>
      <title>Background</title>
      <link>/3-the-grammar-of-graphics/themes/4_gridsbackground/</link>
      <pubDate>Sun, 11 Nov 2018 00:00:00 +0000</pubDate>
      
      <guid>/3-the-grammar-of-graphics/themes/4_gridsbackground/</guid>
      <description>The plot and legend background colours can be changed using the following:
Theme argumentDescriptionpanel.background = element_rect(insert changes here)This changes the background of the main plot itself. We need element_rect() as it is a rectangle geometric object.legend.background = element_rect(insert changes here)This will change the main area of the legend.legend.key = element_rect(insert changes here)This will change the small boxes that each of the factors levels are identified with.</description>
    </item>
    
    <item>
      <title>Grids</title>
      <link>/3-the-grammar-of-graphics/themes/6_grids/</link>
      <pubDate>Sun, 11 Nov 2018 00:00:00 +0000</pubDate>
      
      <guid>/3-the-grammar-of-graphics/themes/6_grids/</guid>
      <description>So far, our graph does not have the original ggplot grid lines because we removed them in our original graph. Before we start changing these, let’s save our beautiful masterpiece to an object/variable to simplify the theme() changing.
iris.scatter &amp;lt;- iris.scatter + theme(panel.background = element_rect(fill=&amp;quot;lavender&amp;quot;, colour=&amp;quot;red&amp;quot;), legend.background = element_rect(fill=&amp;quot;lavender&amp;quot;, colour=&amp;quot;yellow&amp;quot;, size=1), legend.key = element_rect(fill = &amp;quot;gray50&amp;quot;, colour = &amp;quot;green&amp;quot;, size = 0.5)) +theme(axis.line.x = element_line(colour = &amp;quot;skyblue&amp;quot;, size=2), axis.line.y = element_line(colour=&amp;quot;deeppink&amp;quot;, size = 2), axis.</description>
    </item>
    
    <item>
      <title>Axis labels</title>
      <link>/3-the-grammar-of-graphics/themes/7_axislabels/</link>
      <pubDate>Sun, 11 Nov 2018 00:00:00 +0000</pubDate>
      
      <guid>/3-the-grammar-of-graphics/themes/7_axislabels/</guid>
      <description>If we want to change the axis labels themselves, this is done using the labs() command.
iris.scatter &amp;lt;- iris.scatter + labs(x = &amp;quot;Sepal Length (cm)&amp;quot;, y = &amp;quot;Petal Length (cm)&amp;quot;)iris.scatterIf we wish to add a title to our plot (not overly common in publications) we can use the following.
iris.scatter &amp;lt;- iris.scatter + labs(title= &amp;quot;Relationship between petal and sepal length&amp;quot;) iris.scatterAfter trying to use these labs() commands you will start to realise it hates anything slightly symbolic (subscript, superscript, degrees etc.</description>
    </item>
    
    <item>
      <title>Proper examples</title>
      <link>/3-the-grammar-of-graphics/themes/8_properexamples/</link>
      <pubDate>Sun, 11 Nov 2018 00:00:00 +0000</pubDate>
      
      <guid>/3-the-grammar-of-graphics/themes/8_properexamples/</guid>
      <description>## Setting up the graph environment ##iris.scatter.proper &amp;lt;- ggplot(iris, aes(x=Sepal.Length, y=Petal.Length, colour=Species, shape=Species)) + geom_point()## Making our theme ##plottheme &amp;lt;- theme(panel.background = element_rect(fill=&amp;quot;ghostwhite&amp;quot;),legend.background = element_blank(),legend.key = element_rect(fill=&amp;quot;ghostwhite&amp;quot;),axis.line = element_line(colour=&amp;quot;black&amp;quot;, size=1),axis.ticks = element_blank(),axis.title = element_text(colour=&amp;quot;royalblue3&amp;quot;, size=14),plot.title = element_text(face=&amp;quot;bold&amp;quot;, colour=&amp;quot;steelblue4&amp;quot;, size=16),legend.title = element_text(colour=&amp;quot;royalblue3&amp;quot;, size=14),legend.text = element_text(face=&amp;quot;italic&amp;quot;, colour=&amp;quot;steelblue4&amp;quot;, size=10),axis.text = element_text(colour=&amp;quot;steelblue4&amp;quot;, size=12),panel.grid.major = element_line(colour=&amp;quot;gray80&amp;quot;),panel.grid.minor = element_blank())## Applying the theme, adding some labels and changing some colours ##iris.</description>
    </item>
    
  </channel>
</rss>